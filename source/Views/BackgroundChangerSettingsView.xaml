<UserControl x:Class="BackgroundChanger.Views.BackgroundChangerSettingsView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:commonPlugin="clr-namespace:CommonPluginsShared"
             xmlns:AttachedProperties="clr-namespace:CommonPluginsShared.Controls" 
             xmlns:backgroundchanger="clr-namespace:BackgroundChanger" 
             xmlns:pcmd="clr-namespace:CommonPluginsShared" 
             xmlns:playnitecontrols="clr-namespace:CommonPluginsControls.PlayniteControls" 
             xmlns:converters="clr-namespace:CommonPlayniteShared.Converters"
             mc:Ignorable="d" d:DesignWidth="800"
             d:DataContext="{d:DesignInstance Type=backgroundchanger:BackgroundChangerSettingsViewModel}">

    <UserControl.Resources>
        <converters:InvertedBoolenConverter x:Key="InvertedBoolenConverter" />
    </UserControl.Resources>

    <TabControl Margin="20" Name="tcSettings">
        <TabItem Header="{DynamicResource LOCBc}">
            <ScrollViewer Margin="0,10,0,0">
                <Grid Margin="0,0,0,30">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="2*" />
                        <ColumnDefinition Width="10" />
                        <ColumnDefinition Width="auto" />
                        <ColumnDefinition Width="10" />
                        <ColumnDefinition Width="auto" />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="auto" />
                        <RowDefinition Height="20" />
                        <RowDefinition Height="auto" />
                        <!--RowDefinition Height="20" />
                        <RowDefinition Height="auto" /-->
                    </Grid.RowDefinitions>

                    <Label Grid.Column="0" Grid.Row="0" Content="{DynamicResource LOCBcSteamGridDbApiKey}" />
                    <TextBox Grid.Column="1" Grid.Row="0" Text="{Binding Settings.SteamGridDbApiKey}" />
                    <Button Grid.Column="5" Grid.Row="0" Content="&#xefca;" FontFamily="{DynamicResource FontIcoFont}"
                            Command="{x:Static commonPlugin:Commands.NavigateUrl}"
                            CommandParameter="https://www.steamgriddb.com/profile/preferences/api" />

                    <Label Grid.Column="0" Grid.Row="2" Content="{DynamicResource LOCBcFfmpegFile}" />
                    <TextBox Grid.Column="1" Grid.Row="2" Text="{Binding Settings.ffmpegFile, Mode=TwoWay}" Name="PART_FfmpegFile" />
                    <Button Grid.Column="3" Grid.Row="2" Content="&#xeb12;" FontFamily="{DynamicResource FontIcoFont}" HorizontalAlignment="Right"
                            Click="ButtonFfmpeg_Click" />
                    <Button Grid.Column="5" Grid.Row="2" Content="&#xefca;" FontFamily="{DynamicResource FontIcoFont}"
                            Command="{x:Static commonPlugin:Commands.NavigateUrl}"
                            CommandParameter="https://www.ffmpeg.org/" />

                    <!--Label Grid.Column="0" Grid.Row="4" Content="{DynamicResource LOCBcWebpinfoFile}" />
                    <TextBox Grid.Column="1" Grid.Row="4" Text="{Binding Settings.webpinfoFile, Mode=TwoWay}" Name="PART_WebpinfoFile" />
                    <Button Grid.Column="3" Grid.Row="4" Content="&#xeb12;" FontFamily="{DynamicResource FontIcoFont}" HorizontalAlignment="Right"
                            Click="ButtonWebpinfo_Click" />
                    <Button Grid.Column="5" Grid.Row="4" Content="&#xefca;" FontFamily="{DynamicResource FontIcoFont}"
                            Command="{x:Static commonPlugin:Commands.NavigateUrl}"
                            CommandParameter="https://developers.google.com/speed/webp/download" /-->
                </Grid>
            </ScrollViewer>
        </TabItem>

        <TabItem Header="{DynamicResource LOCCommonIntegration}">
            <ScrollViewer Margin="0,10,0,0">
                <StackPanel>
                    <Label Content="{DynamicResource LOCCommonControlsAvailable}" />
                    <Separator Margin="0,0,0,10" />

                    <Expander Margin="0,0,0,10">
                        <Expander.Style>
                            <Style TargetType="{x:Type Expander}" BasedOn="{StaticResource {x:Type Expander}}">
                                <Setter Property="Background" Value="Transparent" />
                            </Style>
                        </Expander.Style>

                        <Expander.Header>
                            <CheckBox IsChecked="{Binding Settings.EnableBackgroundImage}" Name="PART_IntegrationBackgroundImage"
                                      Content="{DynamicResource LOCBcEnableBackgroundImage}" />
                        </Expander.Header>

                        <Expander.Content>
                            <Border IsEnabled="{Binding ElementName=PART_IntegrationBackgroundImage, Path=IsChecked}"
				                    Margin="5" Padding="10"
				                    BorderBrush="{DynamicResource PopupBorderBrush}"
				                    BorderThickness="{DynamicResource PopupBorderThickness}">
                                <StackPanel>
                                    <CheckBox IsChecked="{Binding Settings.BackgroundImageSameSettings}" Margin="0,0,0,10"
                                              Command="{x:Static pcmd:Commands.RestartRequired}" 
                                              CommandParameter="{Binding RelativeSource={RelativeSource Self}}"
                                              Content="{DynamicResource LOCBcBackgroundSameSettings}" />

                                    <DockPanel Margin="0,0,0,10">
                                        <CheckBox IsChecked="{Binding Settings.EnableBackgroundImageRandomSelect}" 
                                                  DockPanel.Dock="Left" Name="cbBackgroundRandom"
                                                  Content="{DynamicResource LOCBcEnableRandomSelect}" />
                                        
                                        <RadioButton DockPanel.Dock="Right" GroupName="BcRandom"
                                                     Name="rbBackgroundOnSelect" Click="rb_Click"
                                                     Content="{DynamicResource LOCBcRandomOnSelect}">
                                            <RadioButton.Style>
                                                <Style TargetType="RadioButton" BasedOn="{StaticResource {x:Type RadioButton}}">
                                                    <Style.Triggers>
                                                        <MultiDataTrigger>
                                                            <MultiDataTrigger.Conditions>
                                                                <Condition Binding="{Binding IsChecked, ElementName=CbBcAutoChanger}" Value="True" />
                                                            </MultiDataTrigger.Conditions>
                                                            <Setter Property="IsEnabled" Value="False" />
                                                        </MultiDataTrigger>
                                                        <MultiDataTrigger>
                                                            <MultiDataTrigger.Conditions>
                                                                <Condition Binding="{Binding IsChecked, ElementName=cbBackgroundRandom}" Value="False" />
                                                            </MultiDataTrigger.Conditions>
                                                            <Setter Property="IsEnabled" Value="False" />
                                                        </MultiDataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </RadioButton.Style>
                                        </RadioButton>

                                        <RadioButton HorizontalAlignment="Right" Margin="0,0,20,0" GroupName="BcRandom"
                                                     Name="rbBackgroundOnStart" Click="rb_Click"
                                                     Content="{DynamicResource LOCBcRandomOnStart}">
                                            <RadioButton.Style>
                                                <Style TargetType="RadioButton" BasedOn="{StaticResource {x:Type RadioButton}}">
                                                    <Style.Triggers>
                                                        <MultiDataTrigger>
                                                            <MultiDataTrigger.Conditions>
                                                                <Condition Binding="{Binding IsChecked, ElementName=CbBcAutoChanger}" Value="True" />
                                                            </MultiDataTrigger.Conditions>
                                                            <Setter Property="IsEnabled" Value="False" />
                                                        </MultiDataTrigger>
                                                        <MultiDataTrigger>
                                                            <MultiDataTrigger.Conditions>
                                                                <Condition Binding="{Binding IsChecked, ElementName=cbBackgroundRandom}" Value="False" />
                                                            </MultiDataTrigger.Conditions>
                                                            <Setter Property="IsEnabled" Value="False" />
                                                        </MultiDataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </RadioButton.Style>
                                        </RadioButton>
                                    </DockPanel>

                                    <CheckBox Name="CbBcAutoChanger" IsChecked="{Binding Settings.EnableBackgroundImageAutoChanger}" Margin="0,0,0,10"
                                              Content="{DynamicResource LOCBcEnableAutoChanger}" />
                                    <StackPanel Margin="50,0,0,10" Orientation="Horizontal" 
                                                IsEnabled="{Binding ElementName=CbBcAutoChanger, Path=IsChecked, TargetNullValue=false}">
                                        <Label Content="{DynamicResource LOCBcTimeInterval}" Margin="0,0,20,0" VerticalAlignment="Center" />
                                        <playnitecontrols:NumericBox MinLongValue="1" MaxLongValue="600" Width="40"
                                                                     LongValue="{Binding Settings.BackgroundImageAutoChangerTimer}" />
                                        <Label VerticalAlignment="Center" Content="{DynamicResource LOCBcSeconds}" Width="150" Margin="10,0,0,0" />
                                    </StackPanel>

                                    <CheckBox Name="CbBcVideoDelay" IsChecked="{Binding Settings.useVideoDelayBackgroundImage}" Margin="0,0,0,10"
                                              ToolTip="{DynamicResource LOCBcVideoDelayToolTip}"
                                              Content="{DynamicResource LOCBcEnableVideoDelay}" />
                                    <StackPanel Margin="50,0,0,10" Orientation="Horizontal" 
                                                IsEnabled="{Binding ElementName=CbBcVideoDelay, Path=IsChecked, TargetNullValue=false}">
                                        <Label Content="{DynamicResource LOCBcTimeInterval}" Margin="0,0,20,0" VerticalAlignment="Center" />
                                        <playnitecontrols:NumericBox MinLongValue="1" MaxLongValue="600" Width="40"
                                                                     LongValue="{Binding Settings.videoDelayBackgroundImage}" />
                                        <Label VerticalAlignment="Center" Content="{DynamicResource LOCBcSeconds}" Width="150" Margin="10,0,0,0" />
                                    </StackPanel>

                                    <StackPanel Orientation="Horizontal" Margin="0,0,0,10">
                                        <Label Content="{DynamicResource LOCSettingsMusiVolume}" VerticalAlignment="Center" Margin="0,0,20,0" />
                                        <playnitecontrols:NumericBox MinLongValue="0" MaxLongValue="100" Width="40"
                                                                     LongValue="{Binding Settings.Volume}" />
                                        <Label VerticalAlignment="Center" Content="{DynamicResource LOCBcSeconds}" Width="150" Margin="10,0,0,0" />
                                    </StackPanel>

                                    <Label Margin="0,0,0,10" Content="EXPERIMENTAL" Foreground="DarkRed" />
                                    <CheckBox IsChecked="{Binding Settings.EnableImageAnimatedBackground}" Grid.Column="0" Grid.Row="16"
                                              Content="{DynamicResource LOCBcEnableImageAnimatedBackground}" />
                                </StackPanel>
                            </Border>
                        </Expander.Content>
                    </Expander>

                    <Expander>
                        <Expander.Style>
                            <Style TargetType="{x:Type Expander}" BasedOn="{StaticResource {x:Type Expander}}">
                                <Setter Property="Background" Value="Transparent" />
                            </Style>
                        </Expander.Style>

                        <Expander.Header>
                            <CheckBox IsChecked="{Binding Settings.EnableCoverImage}" Name="PART_IntegrationCoverImage"
                                      Content="{DynamicResource LOCBcEnableCoverImage}" />
                        </Expander.Header>

                        <Expander.Content>
                            <Border IsEnabled="{Binding ElementName=PART_IntegrationCoverImage, Path=IsChecked}"
				                    Margin="5" Padding="10"
				                    BorderBrush="{DynamicResource PopupBorderBrush}"
				                    BorderThickness="{DynamicResource PopupBorderThickness}">
                                <StackPanel>
                                    <DockPanel Margin="0,0,0,10">
                                        <CheckBox IsChecked="{Binding Settings.EnableCoverImageRandomSelect}"
                                                  DockPanel.Dock="Left" Name="cbCoverRandom"
                                                  Content="{DynamicResource LOCBcEnableRandomSelect}" />

                                        <RadioButton DockPanel.Dock="Right" GroupName="CoverRandom"
                                                     Name="rbCoverOnSelect" Click="rb_Click"
                                                     Content="{DynamicResource LOCBcRandomOnSelect}">
                                            <RadioButton.Style>
                                                <Style TargetType="RadioButton" BasedOn="{StaticResource {x:Type RadioButton}}">
                                                    <Style.Triggers>
                                                        <MultiDataTrigger>
                                                            <MultiDataTrigger.Conditions>
                                                                <Condition Binding="{Binding IsChecked, ElementName=CbAutoChanger}" Value="True" />
                                                            </MultiDataTrigger.Conditions>
                                                            <Setter Property="IsEnabled" Value="False" />
                                                        </MultiDataTrigger>
                                                        <MultiDataTrigger>
                                                            <MultiDataTrigger.Conditions>
                                                                <Condition Binding="{Binding IsChecked, ElementName=cbCoverRandom}" Value="False" />
                                                            </MultiDataTrigger.Conditions>
                                                            <Setter Property="IsEnabled" Value="False" />
                                                        </MultiDataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </RadioButton.Style>
                                        </RadioButton>

                                        <RadioButton HorizontalAlignment="Right" Margin="0,0,20,0" GroupName="CoverRandom"
                                                     Name="rbCoverOnStart" Click="rb_Click"
                                                     Content="{DynamicResource LOCBcRandomOnStart}">
                                            <RadioButton.Style>
                                                <Style TargetType="RadioButton" BasedOn="{StaticResource {x:Type RadioButton}}">
                                                    <Style.Triggers>
                                                        <MultiDataTrigger>
                                                            <MultiDataTrigger.Conditions>
                                                                <Condition Binding="{Binding IsChecked, ElementName=CbAutoChanger}" Value="True" />
                                                            </MultiDataTrigger.Conditions>
                                                            <Setter Property="IsEnabled" Value="False" />
                                                        </MultiDataTrigger>
                                                        <MultiDataTrigger>
                                                            <MultiDataTrigger.Conditions>
                                                                <Condition Binding="{Binding IsChecked, ElementName=cbCoverRandom}" Value="False" />
                                                            </MultiDataTrigger.Conditions>
                                                            <Setter Property="IsEnabled" Value="False" />
                                                        </MultiDataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </RadioButton.Style>
                                        </RadioButton>
                                    </DockPanel>

                                    <CheckBox Name="CbAutoChanger" IsChecked="{Binding Settings.EnableCoverImageAutoChanger}" Margin="0,0,0,10"
                                              Content="{DynamicResource LOCBcEnableAutoChanger}" />
                                    <StackPanel Margin="50,0,0,10" Orientation="Horizontal" 
                                                IsEnabled="{Binding ElementName=CbAutoChanger, Path=IsChecked, TargetNullValue=false}">
                                        <Label Content="{DynamicResource LOCBcTimeInterval}" Margin="0,0,20,0" VerticalAlignment="Center" />
                                        <playnitecontrols:NumericBox MinLongValue="1" MaxLongValue="600" Width="40"
                                                                     LongValue="{Binding Settings.CoverImageAutoChangerTimer}" />
                                        <Label VerticalAlignment="Center" Content="{DynamicResource LOCBcSeconds}" Width="150" Margin="10,0,0,0" />
                                    </StackPanel>

                                    <CheckBox Name="CbVideoDelay" IsChecked="{Binding Settings.useVideoDelayCoverImage}"  Margin="0,0,0,10"
                                              ToolTip="{DynamicResource LOCBcVideoDelayToolTip}"
                                              Content="{DynamicResource LOCBcEnableVideoDelay}" />
                                    <StackPanel Grid.Row="8" Margin="50,0,0,10" Orientation="Horizontal" 
                                                IsEnabled="{Binding ElementName=CbVideoDelay, Path=IsChecked, TargetNullValue=false}">
                                        <Label Content="{DynamicResource LOCBcTimeInterval}" Margin="0,0,20,0" VerticalAlignment="Center" />
                                        <playnitecontrols:NumericBox MinLongValue="1" MaxLongValue="600" Width="40"
                                                                     LongValue="{Binding Settings.videoDelayCoverImage}" />
                                        <Label VerticalAlignment="Center" Content="{DynamicResource LOCBcSeconds}" Width="150" Margin="10,0,0,0" />
                                    </StackPanel>

                                    <Label  Margin="0,0,0,10" Content="EXPERIMENTAL" Foreground="DarkRed" />
                                    <CheckBox IsChecked="{Binding Settings.EnableImageAnimatedCover}"
                                              Content="{DynamicResource LOCBcEnableImageAnimatedCover}" />
                                </StackPanel>
                            </Border>
                        </Expander.Content>
                    </Expander>
                </StackPanel>
            </ScrollViewer>
        </TabItem>
    </TabControl>
</UserControl>